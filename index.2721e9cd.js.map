{"mappings":"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","sources":["src/utils.ts","src/geometry.ts","src/transform.ts","src/model.ts","src/webgl.ts","src/shaders/fill_color.frag","src/shaders/drawers.ts","src/shaders/simple.vert","src/shaders/normal_debug.vert","src/shaders/fill_color_in.frag","src/shaders/lighting_projector.vert","src/shaders/lighting_projector.frag","src/shaders/shadow_map.vert","src/shaders/shadow_map.frag","src/shaders/sprite.vert","src/mesh.ts","src/viewports.ts","src/main.ts","src/input.ts"],"sourcesContent":["export namespace Rand {\r\n    export function range(min = 0, max = 1) {\r\n        return Math.random() * (max - min) + min\r\n    }\r\n    export function signed(max = 1, min = 0) {\r\n        return sign() * range(min, max);\r\n    }\r\n    export function sign() {\r\n        return Math.random() > 0.5 ? 1 : -1\r\n    }\r\n}\r\n\r\nexport function loadImage(url: string): Promise<HTMLImageElement> {\r\n    return new Promise(function (resolve, reject) {\r\n        let img = new Image();\r\n        img.crossOrigin = 'anonymous'\r\n        img.onload = function () {\r\n            return resolve(img);\r\n        };\r\n        img.onerror = function () {\r\n            return reject(new Error(`Can't load image ${url}`));\r\n        };\r\n        img.src = url;\r\n    });\r\n}\r\n\r\nexport function mapRecord<K extends string, T1, T2>(record: Record<K, T1>, map: (value: T1, key: K) => T2): Record<K, T2> {\r\n    return Object.fromEntries(Object.entries<T1>(record).map(([key, value]) => {\r\n        return [key, map(value, key as K)];\r\n    })) as Record<K, T2>;\r\n}\r\n\r\nexport type RecursivePartial<T> = {\r\n    [P in keyof T]?:\r\n    T[P] extends (infer U)[] ? RecursivePartial<U>[] :\r\n    T[P] extends object ? RecursivePartial<T[P]> :\r\n    T[P];\r\n};\r\n\r\nexport function Merge<T>(defaults: T, value: RecursivePartial<T>): T {\r\n    for (let x in defaults) {\r\n        const actual = value[x];\r\n        if (actual === undefined) {\r\n            value[x] = Copy(defaults[x]) as any;\r\n        } else if (typeof actual === \"object\") {\r\n            Merge(defaults[x], actual as T[typeof x]);\r\n        }\r\n    }\r\n    return value as T;\r\n}\r\n\r\nexport function downloadImages<T extends string>(urlsMap: Record<T, string>): Promise<Record<T, HTMLImageElement>> {\r\n    const urls = Object.entries<string>(urlsMap);\r\n    return Promise.all(urls.map(([_, url]) => url).map(loadImage)).then(images =>\r\n        Object.fromEntries(images.map((img, i) => ([urls[i][0], img]))) as Record<T, HTMLImageElement>\r\n    );\r\n}\r\n\r\nfunction downloadFile(url: string) {\r\n    return fetch(url).then(res => res.text());\r\n}\r\n\r\nexport function downloadFiles<T extends string>(urlsMap: Record<T, string>): Promise<Record<T, string>> {\r\n    const urls = Object.entries<string>(urlsMap);\r\n    return Promise.all(urls.map(([_, url]) => url).map(downloadFile)).then(images =>\r\n        Object.fromEntries(images.map((file, i) => ([urls[i][0], file]))) as Record<T, string>\r\n    );\r\n}\r\n\r\nexport function downloadResources<I extends string, F extends string>(images: Record<I, string>, files: Record<F, string>) {\r\n    return Promise.all([downloadImages(images), downloadFiles(files)]).then(([images, files]) => ({images, files}));\r\n}\r\n\r\nfunction Copy<T>(c: T): T {\r\n    return JSON.parse(JSON.stringify(c)) as T;\r\n}\r\n\r\nexport function loadSettingsFromURL<T extends Record<string, any>>(defaults: T): T {\r\n    const url = new URL(location.href);\r\n    return Object.fromEntries(Object.entries(defaults).map(([key, defaultValue]) =>\r\n        [key, getOrDefault(key, defaultValue, url.searchParams)]\r\n    )) as T\r\n}\r\n\r\nfunction getOrDefault<T>(key: string, origin: T, params: URLSearchParams): T {\r\n    const hasKey = params.has(key);\r\n    const value = params.get(key);\r\n    switch (typeof origin) {\r\n        case \"string\":\r\n            return (hasKey ? value : origin) as unknown as T;\r\n        case \"number\":\r\n            return (hasKey ? Number(value) : origin) as unknown as T;\r\n        case \"boolean\":\r\n            return (hasKey ? (value !== \"false\") : origin) as unknown as T;\r\n        default:\r\n            throw new Error(`type ${typeof origin} does not supported`);\r\n    }\r\n}","export type Vector<N extends number, T = number> = N extends 0 ? never[] : {\r\n    0: T;\r\n    length: N;\r\n} & ReadonlyArray<T>;\r\n\r\nexport namespace Vector {\r\n    export function Cross(a: Vector<3>, b: Vector<3>): Vector<3> {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0]\r\n        ];\r\n    }\r\n    export function Substract(a: Vector<3>, b: Vector<3>): Vector<3> {\r\n        return [a[0] - b[0], a[1] - b[1], a[2] - b[2]];\r\n    }\r\n    export function Normilize(v: Vector<3>, newLenght = 1, eps = 0.00000001): Vector<3> {\r\n        const l = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\r\n        if (l < eps)\r\n            return [0, 0, 0];\r\n        return [v[0] / l * newLenght, v[1] / l * newLenght, v[2] / l * newLenght];\r\n    }\r\n}\r\n\r\nexport class Matrix {\r\n    readonly m: Float32Array;\r\n    constructor(\r\n        m: Vector<16> = [\r\n            0, 0, 0, 0,\r\n            0, 0, 0, 0,\r\n            0, 0, 0, 0,\r\n            0, 0, 0, 0,\r\n        ]\r\n    ) {\r\n        if (m.length !== 4 * 4) {\r\n            throw new Error(\"Matrix should be 4x4\")\r\n        }\r\n        this.m = new Float32Array(m);\r\n    }\r\n    static Identity(): Matrix {\r\n        return new Matrix([\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ])\r\n    }\r\n    static Scale(x: number, y = x, z = x) {\r\n        return new Matrix([\r\n            x, 0, 0, 0,\r\n            0, y, 0, 0,\r\n            0, 0, z, 0,\r\n            0, 0, 0, 1,\r\n        ])\r\n    }\r\n    static RotateX(angle: number): Matrix {\r\n        const c = Math.cos(angle);\r\n        const s = Math.sin(angle);\r\n        return new Matrix([\r\n            +1, +0, +0, +0,\r\n            +0, +c, +s, +0,\r\n            +0, -s, +c, +0,\r\n            +0, +0, +0, +1,\r\n        ])\r\n    }\r\n    static RotateY(angle: number): Matrix {\r\n        const c = Math.cos(angle);\r\n        const s = Math.sin(angle);\r\n        return new Matrix([\r\n            +c, +0, -s, +0,\r\n            +0, +1, +0, +0,\r\n            +s, +0, +c, +0,\r\n            +0, +0, +0, +1,\r\n        ])\r\n    }\r\n    static RotateZ(angle: number): Matrix {\r\n        const c = Math.cos(angle);\r\n        const s = Math.sin(angle);\r\n        return new Matrix([\r\n            +c, +s, +0, +0,\r\n            -s, +c, +0, +0,\r\n            +0, +0, +1, +0,\r\n            +0, +0, +0, +1,\r\n        ])\r\n    }\r\n    static Perspective(fieldOfView: number, aspect: number, nearZ: number, farZ: number) {\r\n        const f = Math.tan(0.5 * (Math.PI - fieldOfView));\r\n        const rangeInv = 1.0 / (nearZ - farZ);\r\n        return new Matrix([\r\n            f / aspect, 0, 0, 0,\r\n            0, f, 0, 0,\r\n            0, 0, (nearZ + farZ) * rangeInv, -1,\r\n            0, 0, nearZ * farZ * rangeInv * 2, 0\r\n        ]);\r\n    }\r\n    static Ortographic(\r\n        minX: number, maxX: number,\r\n        minY: number, maxY: number,\r\n        minZ: number, maxZ: number,\r\n    ) {\r\n        const w = maxX - minX;\r\n        const h = maxY - minY;\r\n        const d = maxZ - minZ;\r\n        return new Matrix([\r\n            2 / w, 0, 0, 0,\r\n            0, 2 / h, 0, 0,\r\n            0, 0, 2 / d, 0,\r\n            (minX + maxX) / w, (minY + maxY) / h, (minZ + maxZ) / d, 1,\r\n        ])\r\n    }\r\n    static LookAt(from: Vector<3>, to: Vector<3>, up: Vector<3>): Matrix {\r\n        const zAxis = Vector.Normilize(Vector.Substract(from, to));\r\n        const xAxis = Vector.Normilize(Vector.Cross(up, zAxis));\r\n        const yAxis = Vector.Normilize(Vector.Cross(zAxis, xAxis));\r\n        return new Matrix([\r\n            xAxis[0], xAxis[1], xAxis[2], 0,\r\n            yAxis[0], yAxis[1], yAxis[2], 0,\r\n            zAxis[0], zAxis[1], zAxis[2], 0,\r\n            from[0], from[1], from[2], 1,\r\n        ]);\r\n    }\r\n    static Move(dx: number, dy: number, dz: number): Matrix {\r\n        return new Matrix([\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            dx, dy, dz, 1,\r\n        ])\r\n    }\r\n    static Multiply(a: Matrix, b: Matrix, c: Matrix = new Matrix()) {\r\n        const a00 = a.m[0 * 4 + 0];\r\n        const a01 = a.m[0 * 4 + 1];\r\n        const a02 = a.m[0 * 4 + 2];\r\n        const a03 = a.m[0 * 4 + 3];\r\n        const a10 = a.m[1 * 4 + 0];\r\n        const a11 = a.m[1 * 4 + 1];\r\n        const a12 = a.m[1 * 4 + 2];\r\n        const a13 = a.m[1 * 4 + 3];\r\n        const a20 = a.m[2 * 4 + 0];\r\n        const a21 = a.m[2 * 4 + 1];\r\n        const a22 = a.m[2 * 4 + 2];\r\n        const a23 = a.m[2 * 4 + 3];\r\n        const a30 = a.m[3 * 4 + 0];\r\n        const a31 = a.m[3 * 4 + 1];\r\n        const a32 = a.m[3 * 4 + 2];\r\n        const a33 = a.m[3 * 4 + 3];\r\n        const b00 = b.m[0 * 4 + 0];\r\n        const b01 = b.m[0 * 4 + 1];\r\n        const b02 = b.m[0 * 4 + 2];\r\n        const b03 = b.m[0 * 4 + 3];\r\n        const b10 = b.m[1 * 4 + 0];\r\n        const b11 = b.m[1 * 4 + 1];\r\n        const b12 = b.m[1 * 4 + 2];\r\n        const b13 = b.m[1 * 4 + 3];\r\n        const b20 = b.m[2 * 4 + 0];\r\n        const b21 = b.m[2 * 4 + 1];\r\n        const b22 = b.m[2 * 4 + 2];\r\n        const b23 = b.m[2 * 4 + 3];\r\n        const b30 = b.m[3 * 4 + 0];\r\n        const b31 = b.m[3 * 4 + 1];\r\n        const b32 = b.m[3 * 4 + 2];\r\n        const b33 = b.m[3 * 4 + 3];\r\n        c.m[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\r\n        c.m[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\r\n        c.m[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\r\n        c.m[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\r\n        c.m[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\r\n        c.m[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\r\n        c.m[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\r\n        c.m[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\r\n        c.m[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\r\n        c.m[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\r\n        c.m[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\r\n        c.m[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\r\n        c.m[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\r\n        c.m[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\r\n        c.m[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\r\n        c.m[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\r\n        return c;\r\n    }\r\n    multiply(another: Matrix) {\r\n        return Matrix.Multiply(this, another, this);\r\n    }\r\n    multiplyLeft(another: Matrix) {\r\n        return Matrix.Multiply(another, this, this);\r\n    }\r\n    position(): Vector<3> {\r\n        return [this.m[12], this.m[13], this.m[14]];\r\n    }\r\n    multiplyVector(vector: Vector<4>) {\r\n        const result = [0, 0, 0, 0];\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let k = 0; k < 4; k++) {\r\n                result[i] += this.m[k * 4 + i] * vector[k];\r\n            }\r\n        }\r\n        for (let i = 0; i < 3; i++)\r\n            result[i] /= result[3];\r\n        result.pop();\r\n        return result;\r\n    }\r\n    inverse(): Matrix {\r\n        const m = this.m;\r\n        const m00 = m[0 * 4 + 0];\r\n        const m01 = m[0 * 4 + 1];\r\n        const m02 = m[0 * 4 + 2];\r\n        const m03 = m[0 * 4 + 3];\r\n        const m10 = m[1 * 4 + 0];\r\n        const m11 = m[1 * 4 + 1];\r\n        const m12 = m[1 * 4 + 2];\r\n        const m13 = m[1 * 4 + 3];\r\n        const m20 = m[2 * 4 + 0];\r\n        const m21 = m[2 * 4 + 1];\r\n        const m22 = m[2 * 4 + 2];\r\n        const m23 = m[2 * 4 + 3];\r\n        const m30 = m[3 * 4 + 0];\r\n        const m31 = m[3 * 4 + 1];\r\n        const m32 = m[3 * 4 + 2];\r\n        const m33 = m[3 * 4 + 3];\r\n        const tmp_0 = m22 * m33;\r\n        const tmp_1 = m32 * m23;\r\n        const tmp_2 = m12 * m33;\r\n        const tmp_3 = m32 * m13;\r\n        const tmp_4 = m12 * m23;\r\n        const tmp_5 = m22 * m13;\r\n        const tmp_6 = m02 * m33;\r\n        const tmp_7 = m32 * m03;\r\n        const tmp_8 = m02 * m23;\r\n        const tmp_9 = m22 * m03;\r\n        const tmp_10 = m02 * m13;\r\n        const tmp_11 = m12 * m03;\r\n        const tmp_12 = m20 * m31;\r\n        const tmp_13 = m30 * m21;\r\n        const tmp_14 = m10 * m31;\r\n        const tmp_15 = m30 * m11;\r\n        const tmp_16 = m10 * m21;\r\n        const tmp_17 = m20 * m11;\r\n        const tmp_18 = m00 * m31;\r\n        const tmp_19 = m30 * m01;\r\n        const tmp_20 = m00 * m21;\r\n        const tmp_21 = m20 * m01;\r\n        const tmp_22 = m00 * m11;\r\n        const tmp_23 = m10 * m01;\r\n\r\n        const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\r\n            (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\r\n        const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\r\n            (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\r\n        const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\r\n            (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\r\n        const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\r\n            (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\r\n\r\n        const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\r\n\r\n        return new Matrix([\r\n            d * t0,\r\n            d * t1,\r\n            d * t2,\r\n            d * t3,\r\n            d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\r\n                (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30)),\r\n            d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\r\n                (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30)),\r\n            d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\r\n                (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30)),\r\n            d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\r\n                (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20)),\r\n            d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\r\n                (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33)),\r\n            d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\r\n                (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33)),\r\n            d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\r\n                (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33)),\r\n            d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\r\n                (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23)),\r\n            d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\r\n                (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22)),\r\n            d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\r\n                (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02)),\r\n            d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\r\n                (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12)),\r\n            d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\r\n                (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02)),\r\n        ]);\r\n    }\r\n}\r\n","import { Matrix, Vector } from \"./geometry\";\n\nexport interface Transform {\n    readonly position: Matrix;\n    readonly matrix: Matrix;\n    readonly m: Matrix['m'];\n}\n\nexport class TransformProjectorTail implements Transform {\n    constructor(\n        readonly t: Transform,\n        readonly p: Matrix,\n    ) { }\n    get position(): Matrix {\n        return this.t.matrix.multiply(this.p.inverse());\n    }\n\n    get matrix(): Matrix {\n        return this.position;\n    }\n\n    get m(): Matrix['m'] {\n        return this.matrix.m;\n    }\n}\n\nexport class TransformMatrixes {\n    constructor(\n        public shift: Matrix = Matrix.Identity(),\n        public rotate: Matrix = Matrix.Identity(),\n        public scale: Matrix = Matrix.Identity(),\n        public parent?: Transform,\n    ) { }\n\n    get position(): Matrix {\n        const root = this.parent?.position || Matrix.Identity();\n        return root.multiply(this.shift).multiply(this.rotate);\n    }\n\n    get matrix(): Matrix {\n        return this.position.multiply(this.scale);\n    }\n\n    get m(): Matrix['m'] {\n        return this.matrix.m;\n    }\n}\n\nexport class TransformLookAt {\n    constructor(\n        public parent: Transform,\n        public pos: Vector<3>,\n        public up: Vector<3> = [0, 1, 0],\n    ) { }\n\n    get position(): Matrix {\n        return Matrix.LookAt(this.pos, this.parent.matrix.position(), this.up);\n    }\n\n    get matrix(): Matrix {\n        return this.position;\n    }\n\n    get m(): Matrix['m'] {\n        return this.matrix.m;\n    }\n}","import { Matrix, Vector } from \"./geometry\";\r\nimport { mapRecord } from \"./utils\";\r\nimport { Mesh } from \"./mesh\";\r\nimport { Transform, TransformMatrixes } from \"./transform\";\r\n\r\nexport type Material = {\r\n    diffuseColor: Vector<3>;\r\n    specularColor: Vector<3>;\r\n    specular: number;\r\n    debugColor?: Vector<3>;\r\n    useTexture?: boolean;\r\n}\r\n\r\nexport class Model {\r\n    constructor(\r\n        public material: Material,\r\n        public transform: Transform,\r\n    ) { }\r\n}\r\n\r\nexport class Sprite {\r\n    constructor(\r\n        readonly transform: Transform,\r\n        readonly color: [number, number, number, number?],\r\n        readonly size: number,\r\n    ) { }\r\n}\r\n\r\nexport class ModelsFactory<M extends string, Layer extends number> {\r\n    readonly models: Record<M, Model[]>;\r\n    readonly types: M[];\r\n    constructor(\r\n        public meshes: Record<M, Mesh>,\r\n        public drawers: Record<M, { layers: Layer, draw: (projection: Matrix, camera: Matrix, mesh: Mesh, models: Model[]) => void }[]>,\r\n    ) {\r\n        this.models = mapRecord(meshes, () => new Array<Model>());\r\n        this.types = Object.keys(meshes) as M[];\r\n    }\r\n    add(type: M, material: Material, transform: {\r\n        x?: number; y?: number; z?: number;\r\n        angleX?: number; angleY?: number; angleZ?: number;\r\n        scale?: number;\r\n        parent?: Transform,\r\n    } = {}) {\r\n        const {\r\n            x = 0, y = 0, z = 0,\r\n            angleX = 0, angleY = 0, angleZ = 0,\r\n            scale = 1, parent,\r\n        } = transform;\r\n        const model = new Model(material, new TransformMatrixes(\r\n            Matrix.Move(x, y, z),\r\n            Matrix.RotateX(angleX).multiply(Matrix.RotateY(angleY)).multiply(Matrix.RotateZ(angleZ)),\r\n            Matrix.Scale(scale),\r\n            parent)\r\n        );\r\n        this.models[type].push(model);\r\n        return model;\r\n    }\r\n    draw(projection: Matrix, camera: Matrix, layer: Layer) {\r\n        this.types.forEach(type => {\r\n            this.drawers[type]\r\n                .filter(({ layers }) => layers & layer)\r\n                .forEach(({ draw }) => {\r\n                    draw(projection, camera, this.meshes[type], this.models[type]);\r\n                })\r\n        })\r\n    }\r\n}\r\n\r\nexport class DecoreManager<Layer extends number> {\r\n    constructor(\r\n        public drawers: {\r\n            'sprite': { layers: Layer, draw: (projection: Matrix, camera: Matrix, sprite: Sprite) => void }[],\r\n        }\r\n    ) {\r\n    }\r\n\r\n    readonly sprites = new Array<Sprite>();\r\n    addSprite(size: number, material: [number, number, number, number?], transform: {\r\n        x?: number; y?: number; z?: number;\r\n        parent?: Transform,\r\n    } = {}) {\r\n        const {\r\n            x = 0, y = 0, z = 0, parent,\r\n        } = transform;\r\n        const sprite = new Sprite(\r\n            new TransformMatrixes(Matrix.Move(x, y, z), Matrix.Identity(), Matrix.Identity(), parent),\r\n            material, size\r\n        );\r\n        this.sprites.push(sprite);\r\n        return sprite;\r\n    }\r\n    readonly custom = new Array<{ layers: Layer, draw: (projection: Matrix, camera: Matrix) => void }>();\r\n    addCustom(layer: Layer, drawer: (projection: Matrix, camera: Matrix) => void) {\r\n        return this.custom.push({ layers: layer, draw: drawer });\r\n    }\r\n    draw(projection: Matrix, camera: Matrix, layer: Layer) {\r\n        this.sprites.forEach(sprite => {\r\n            this.drawers.sprite\r\n                .filter(({ layers }) => layers & layer)\r\n                .forEach(({ draw }) => {\r\n                    draw(projection, camera, sprite);\r\n                })\r\n        })\r\n        this.custom.filter(({ layers }) => layers & layer).forEach(({ draw }) => draw(projection, camera));\r\n    }\r\n}\r\n","import { mapRecord } from \"./utils\";\r\n\r\nexport class ProgramWrapper<U extends string, Attrs extends string> {\r\n    public readonly program: WebGLProgram\r\n    public readonly uniforms: Record<U, WebGLUniformLocation>\r\n    public readonly attributes: Record<Attrs, GLint>\r\n    constructor(\r\n        protected gl: WebGL2RenderingContext,\r\n        { vertex, fragment }: { vertex: string, fragment: string },\r\n        uniforms: Record<U, string>,\r\n        attributes: Record<Attrs, string>,\r\n    ) {\r\n        try {\r\n            this.program = initShaderProgram(gl, vertex, fragment);\r\n            this.uniforms = getUniforms(gl, this.program, uniforms);\r\n            this.attributes = getAttributes(gl, this.program, attributes);\r\n\r\n            const numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\r\n            const uniformsNames = new Set(Object.values(uniforms));\r\n            for (let i = 0; i < numUniforms; ++i) {\r\n                const { name, type } = gl.getActiveUniform(this.program, i)!;\r\n                if (!uniformsNames.has(name))\r\n                    console.warn(`Not used uniform ${name} (${type}) in ${this.constructor.name}`);\r\n            }\r\n\r\n            const numAttributes = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\r\n            const attributesNames = new Set(Object.values(attributes));\r\n            for (let i = 0; i < numAttributes; ++i) {\r\n                const { name, type } = gl.getActiveAttrib(this.program, i)!;\r\n                if (!attributesNames.has(name))\r\n                    console.warn(`Not used attribute ${name} (${type}) in ${this.constructor.name}`);\r\n            }\r\n        } catch (err: any) {\r\n            throw new Error(`Failed create program ${this.constructor.name}: ${err}`);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TexturesManager<Ids extends string> {\r\n    private readonly textures: Record<Ids, number>\r\n    constructor(gl: WebGL2RenderingContext, texturesMap: Record<Ids, TexImageSource>) {\r\n        let textureId = 0;\r\n        this.textures = mapRecord(texturesMap, (image) => {\r\n            const label = (gl as any)[`TEXTURE${textureId}`] as number || undefined\r\n            if (label === undefined)\r\n                throw new Error(`Textures overflow`);\r\n            gl.activeTexture(label);\r\n            const texture = createTexture(gl, image);\r\n            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n            return textureId++\r\n        })\r\n    }\r\n    public get(id: Ids): number {\r\n        return this.textures[id]\r\n    }\r\n}\r\n\r\nexport function createTexture(gl: WebGL2RenderingContext, img: TexImageSource) {\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\r\n    gl.generateMipmap(gl.TEXTURE_2D);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return texture;\r\n}\r\n\r\nfunction getUniforms<T extends string>(gl: WebGL2RenderingContext, program: WebGLProgram, uniforms: Record<T, string>): Record<T, WebGLUniformLocation> {\r\n    return mapRecord(uniforms, (name) => {\r\n        const uniform = gl.getUniformLocation(program, name);\r\n        if (uniform === null)\r\n            throw new Error(`Not found uniform ${name}`);\r\n        return uniform;\r\n    });\r\n}\r\n\r\nfunction getAttributes<T extends string>(gl: WebGL2RenderingContext, program: WebGLProgram, uniforms: Record<T, string>): Record<T, GLint> {\r\n    return mapRecord(uniforms, (name) => {\r\n        const attr = gl.getAttribLocation(program, name);\r\n        if (attr === null)\r\n            throw new Error(`Not found attribute ${name}`);\r\n        return attr;\r\n    });\r\n}\r\n\r\n// Функция загрузки шейдера\r\nfunction loadShader(gl: WebGL2RenderingContext, type: GLenum, source: string) {\r\n    // Создаём шейдер\r\n    const shader = gl.createShader(type);\r\n    if (!shader)\r\n        throw new Error(`Failed to compile the shader of type ${type}:\\n${source}`)\r\n    // Компилируем шейдер\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    // Обрабатываем ошибки\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        throw new Error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\n// Функция инициализации шейдерной программы\r\nfunction initShaderProgram(gl: WebGL2RenderingContext, vsSource: string, fsSource: string) {\r\n    // Загружаем вершинный шейдер\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n    // Загружаем фрагментный шейдер\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n\r\n    //Создаём программу и прикрепляем шейдеры к ней\r\n    const shaderProgram = gl.createProgram()!;\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n\r\n    // Обрабатываем ошибки\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n        throw new Error(`Unable to initialize the shader program: ${gl.getProgramInfoLog(shaderProgram)}`);\r\n    }\r\n    return shaderProgram;\r\n}\r\n","#version 300 es\r\nprecision mediump float;\r\n\r\nuniform vec4 u_color;\r\nout vec4 FragColor;\r\n\r\nvoid main() {\r\n    FragColor = u_color;\r\n}","import { ProgramWrapper } from \"../webgl\"\r\nimport { Model } from \"../model\"\r\nimport { Matrix, Vector } from \"../geometry\"\r\n\r\n\r\nimport simpleVert from \"./simple.vert\"\r\nimport fillColorFrag from \"./fill_color.frag\"\r\n\r\nexport const simple = (gl: WebGL2RenderingContext) => {\r\n    const { program, uniforms, attributes } = new ProgramWrapper(\r\n        gl,\r\n        { vertex: simpleVert, fragment: fillColorFrag },\r\n        { color: \"u_color\", transform: \"u_transform\", projection: \"u_projection\" },\r\n        { position: \"a_position\" }\r\n    )\r\n    return (projection: Matrix, mesh: Mesh, models: Model[], fill = true, stroke = false) => {\r\n        gl.useProgram(program);\r\n        gl.bindVertexArray(mesh.vao);\r\n\r\n        for (const model of models) {\r\n            const { diffuseColor: [r, g, b], debugColor: [dr, dg, db] = [r, g, b] } = model.material\r\n            gl.uniformMatrix4fv(uniforms.transform, false, model.transform.m);\r\n            gl.uniformMatrix4fv(uniforms.projection, false, projection.m);\r\n\r\n            if (fill) {\r\n                gl.uniform4f(uniforms.color, r, g, b, 1);\r\n                gl.drawElements(gl.TRIANGLES, mesh.indices.length, gl.UNSIGNED_SHORT, 0);\r\n            }\r\n            if (stroke) {\r\n                gl.uniform4f(uniforms.color, dr, dg, db, 1);\r\n                gl.drawElements(gl.LINES, mesh.indices.length, gl.UNSIGNED_SHORT, 0);\r\n            }\r\n        }\r\n\r\n        gl.bindVertexArray(null);\r\n        gl.useProgram(null);\r\n    }\r\n}\r\n\r\nimport normalDebugVert from \"./normal_debug.vert\";\r\nimport fillColorAttrFrag from \"./fill_color_in.frag\";\r\n\r\nexport const normalDebug = (gl: WebGL2RenderingContext) => {\r\n    const { program, uniforms, attributes } = new ProgramWrapper(\r\n        gl,\r\n        { vertex: normalDebugVert, fragment: fillColorAttrFrag },\r\n        { transform: \"u_transform\", projection: \"u_projection\" },\r\n        { position: \"a_position\" }\r\n    )\r\n    return (projection: Matrix, mesh: Mesh, models: Model[]) => {\r\n        gl.useProgram(program);\r\n        gl.bindVertexArray(mesh.vao);\r\n\r\n        for (const model of models) {\r\n            gl.uniformMatrix4fv(uniforms.transform, false, model.transform.m);\r\n            gl.uniformMatrix4fv(uniforms.projection, false, projection.m);\r\n\r\n            gl.drawElements(gl.TRIANGLES, mesh.indices.length, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n        gl.bindVertexArray(null);\r\n        gl.useProgram(null);\r\n    }\r\n}\r\n\r\nimport lightingProjectorVert from \"./lighting_projector.vert\";\r\nimport lightingProjectorFrag from \"./lighting_projector.frag\";\r\nimport { Projector } from \"../main\"\r\n\r\nexport const lightingProjector = (gl: WebGL2RenderingContext) => {\r\n    const { program, uniforms, attributes } = new ProgramWrapper(\r\n        gl,\r\n        { vertex: lightingProjectorVert, fragment: lightingProjectorFrag },\r\n        {\r\n            transform: \"u_transform\", projection: \"u_projection\",\r\n            view: \"u_viewPosition\",\r\n            diffuseColor: \"mat.diffuseColor\",\r\n            specularColor: \"mat.specularColor\",\r\n            specular: \"mat.specular\",\r\n            enableTexture: \"mat.hasTexture\",\r\n            texture: \"textureSampler\",\r\n            projectorTransform: \"u_projector.transform\",\r\n            projectorAngle: \"u_projector.angle\",\r\n            projectorProjection: \"u_projector.projection\",\r\n            shadowMap: \"shadowMap\",\r\n        },\r\n        { position: \"a_position\" }\r\n    )\r\n    const sampler = gl.createSampler()!;\r\n    gl.samplerParameteri(sampler, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n    gl.samplerParameteri(sampler, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.samplerParameteri(sampler, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    // gl.samplerParameteri(sampler, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    // gl.samplerParameteri(sampler, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    return (projection: Matrix, mesh: Mesh, models: Model[], projector: Projector, viewPos: Vector<3>, shadowMap: number) => {\r\n        gl.useProgram(program);\r\n        gl.bindVertexArray(mesh.vao);\r\n        gl.bindSampler(10, sampler);\r\n\r\n        gl.uniformMatrix4fv(uniforms.projection, false, projection.m);\r\n        gl.uniformMatrix4fv(uniforms.projectorTransform, false, projector.transform.m);\r\n        gl.uniformMatrix4fv(uniforms.projectorProjection, false, projector.projection.m);\r\n        gl.uniform1f(uniforms.projectorAngle, projector.angle);\r\n        gl.uniform3f(uniforms.view, viewPos[0], viewPos[1], viewPos[2]);\r\n        gl.uniform1i(uniforms.shadowMap, shadowMap);\r\n\r\n\r\n        if (mesh.texture) {\r\n            gl.activeTexture(gl.TEXTURE1);\r\n            gl.bindTexture(gl.TEXTURE_2D, mesh.texture);\r\n            gl.uniform1i(uniforms.texture, 1);\r\n        }\r\n        for (const model of models) {\r\n            gl.uniform1i(uniforms.enableTexture, model.material.useTexture ? 1 : 0);\r\n            gl.uniformMatrix4fv(uniforms.transform, false, model.transform.m);\r\n            gl.uniform4f(uniforms.diffuseColor, model.material.diffuseColor[0], model.material.diffuseColor[1], model.material.diffuseColor[2], 1);\r\n            gl.uniform4f(uniforms.specularColor, model.material.specularColor[0], model.material.specularColor[1], model.material.specularColor[2], 1);\r\n            gl.uniform1f(uniforms.specular, model.material.specular);\r\n            gl.drawElements(gl.TRIANGLES, mesh.indices.length, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n\r\n        gl.bindSampler(10, null);\r\n        gl.bindVertexArray(null);\r\n        gl.useProgram(null);\r\n    }\r\n}\r\n\r\nimport shadowMapVert from \"./shadow_map.vert\";\r\nimport shadowMapFrag from \"./shadow_map.frag\";\r\n\r\nexport const shadowMap = (gl: WebGL2RenderingContext) => {\r\n    const { program, uniforms, attributes } = new ProgramWrapper(\r\n        gl,\r\n        { vertex: shadowMapVert, fragment: shadowMapFrag },\r\n        {\r\n            transform: \"u_transform\", projection: \"u_projection\"\r\n        },\r\n        { position: \"a_position\" }\r\n    )\r\n    return (projection: Matrix, mesh: Mesh, models: Model[]) => {\r\n        gl.useProgram(program);\r\n        gl.bindVertexArray(mesh.vao);\r\n\r\n        for (const model of models) {\r\n            gl.uniformMatrix4fv(uniforms.transform, false, model.transform.m);\r\n            gl.uniformMatrix4fv(uniforms.projection, false, projection.m);\r\n\r\n            gl.drawElements(gl.TRIANGLES, mesh.indices.length, gl.UNSIGNED_SHORT, 0);\r\n        }\r\n        gl.bindVertexArray(null);\r\n        gl.useProgram(null);\r\n    }\r\n}\r\n\r\n/** not mesh */\r\nimport spriteVert from \"./sprite.vert\"\r\nimport { Mesh } from \"../mesh\"\r\n\r\nexport const sprite = (gl: WebGL2RenderingContext) => {\r\n    const { program, uniforms, attributes } = new ProgramWrapper(\r\n        gl,\r\n        { vertex: spriteVert, fragment: fillColorFrag },\r\n        { color: \"u_color\", transform: \"u_transform\", projection: \"u_projection\", size: \"u_size\" },\r\n        { position: \"a_position\" }\r\n    )\r\n    const positionBuffer = gl.createBuffer();\r\n    return (projection: Matrix, position: Vector<3>, [r, g, b, a = 1]: [number, number, number, number?], size = 16) => {\r\n        gl.useProgram(program);\r\n\r\n        gl.uniform4f(uniforms.color, r, g, b, a);\r\n        gl.uniformMatrix4fv(uniforms.transform, false, Matrix.Identity().m);\r\n        gl.uniformMatrix4fv(uniforms.projection, false, projection.m);\r\n        gl.uniform1f(uniforms.size, size);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n        gl.vertexAttribPointer(attributes.position, 4, gl.FLOAT, false, 0, 0);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([...position, 1]), gl.STATIC_DRAW);\r\n        gl.enableVertexAttribArray(attributes.position);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        gl.drawArrays(gl.POINTS, 0, 1);\r\n        gl.useProgram(null);\r\n    }\r\n}\r\n\r\nexport const texture = (gl: WebGL2RenderingContext) => {\r\n    const vs = `#version 300 es\r\n        in vec2 position;\r\n        out vec2 v_texcoord;\r\n        void main() {\r\n        gl_Position = vec4(position, 0, 1);\r\n        v_texcoord = position.xy * 0.5 + 0.5;\r\n        v_texcoord.y = v_texcoord.y;\r\n    }`;\r\n    const fs = `#version 300 es\r\n        precision mediump float;\r\n        in vec2 v_texcoord;\r\n        uniform sampler2D tex;\r\n        out vec4 FragColor;\r\n        void main() {\r\n        FragColor = texture(tex, v_texcoord);\r\n    }`;\r\n    const programInfo = new ProgramWrapper(gl, { vertex: vs, fragment: fs }, { texture: \"tex\" }, { position: \"position\" });\r\n    const vao = gl.createVertexArray();\r\n    gl.bindVertexArray(vao);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\r\n        -1, -1,\r\n        1, -1,\r\n        -1, 1,\r\n        -1, 1,\r\n        1, -1,\r\n        1, 1,\r\n    ]), gl.STATIC_DRAW);\r\n    const postitonPosition = gl.getAttribLocation(programInfo.program, \"position\");\r\n    gl.enableVertexAttribArray(postitonPosition);\r\n    gl.vertexAttribPointer(postitonPosition, 2, gl.FLOAT, false, 0, 0);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.bindVertexArray(null);\r\n\r\n    return (texture: number) => {\r\n        gl.useProgram(programInfo.program);\r\n        gl.uniform1i(programInfo.uniforms.texture, texture);\r\n        gl.bindVertexArray(vao);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n        gl.bindVertexArray(null);\r\n        gl.useProgram(null);\r\n    };\r\n}\r\n","#version 300 es\r\nprecision mediump float;\r\n\r\nlayout(location = 0) in vec4 a_position;\r\nuniform mat4 u_transform;\r\nuniform mat4 u_projection;\r\nvoid main() {\r\n    gl_Position = u_projection * u_transform * vec4(a_position);\r\n}","#version 300 es\r\nprecision mediump float;\r\n\r\nlayout(location = 0) in vec4 a_position;\r\nlayout(location = 1) in vec3 a_normal;\r\nuniform mat4 u_transform;\r\nuniform mat4 u_projection;\r\n\r\nout vec4 a_color;\r\nvoid main() {\r\n    gl_Position = u_projection * u_transform * vec4(a_position);\r\n    a_color = vec4(a_normal, 1);\r\n    a_color = vec4((a_color.x + 1.) / 2., (a_color.y + 1.) / 2., (a_color.z + 1.) / 2., a_color.w);\r\n}","#version 300 es\r\nprecision mediump float;\r\n\r\nin vec4 a_color;\r\nout vec4 FragColor;\r\n\r\nvoid main() {\r\n    FragColor = a_color;\r\n}","#version 300 es\r\nprecision mediump float;\r\n\r\nstruct Projector {\r\n    mat4 transform;\r\n    mat4 projection;\r\n    float angle;\r\n};\r\n\r\nlayout(location = 0) in vec4 a_position;\r\nlayout(location = 1) in vec3 a_normal;\r\nlayout(location = 2) in vec2 a_texcoord;\r\nuniform mat4 u_transform;\r\nuniform mat4 u_projection;\r\nuniform Projector u_projector;\r\nuniform vec3 u_viewPosition;\r\n\r\nout vec3 v_normal;\r\nout vec2 v_texcoord;\r\nout vec3 v_surfaceToLight;\r\nout vec3 v_surfaceToView;\r\nout vec4 v_shadowMapCoord;\r\nvoid main() {\r\n    vec4 position = u_transform * a_position;\r\n    gl_Position = u_projection * position;\r\n\r\n    v_texcoord = a_texcoord;\r\n    v_surfaceToLight = (u_projector.transform * vec4(0, 0, 0, 1)).xyz - position.xyz;\r\n    v_surfaceToView = u_viewPosition - position.xyz;\r\n    v_normal = mat3(u_transform) * a_normal;\r\n    v_shadowMapCoord = u_projector.projection * inverse(u_projector.transform) * position;\r\n}","#version 300 es\r\nprecision mediump float;\r\nprecision mediump sampler2D;\r\nprecision mediump sampler2DShadow;\r\n\r\nin vec3 v_normal;\r\nin vec3 v_surfaceToLight;\r\nin vec3 v_surfaceToView;\r\nin vec4 v_shadowMapCoord;\r\nin vec2 v_texcoord;\r\n\r\nstruct Material {\r\n    vec4 diffuseColor;\r\n    vec4 specularColor;\r\n    float specular;\r\n    bool hasTexture;\r\n};\r\n\r\nstruct Projector {\r\n    mat4 transform;\r\n    mat4 projection;\r\n    float angle;\r\n};\r\n\r\nuniform Material mat;\r\nuniform Projector u_projector;\r\nuniform sampler2DShadow shadowMap;\r\nuniform sampler2D textureSampler;\r\n\r\nout vec4 FragColor;\r\nvoid main() {\r\n    float l = length(v_surfaceToLight);\r\n    vec3 normal = normalize(v_normal);\r\n    vec3 surfaceToLightDirection = normalize(v_surfaceToLight);\r\n    vec3 surfaceToViewDirection = normalize(v_surfaceToView);\r\n    vec3 halfVector = normalize(surfaceToLightDirection + surfaceToViewDirection);\r\n\r\n    vec3 shadowMapCoord = v_shadowMapCoord.xyz / v_shadowMapCoord.w;\r\n    vec3 shadowCoords = (shadowMapCoord.xyz + vec3(1, 1, shadowMapCoord.z)) / 2.;\r\n    float inShadow = texture(shadowMap, shadowCoords);\r\n\r\n    float directionAngel = dot(surfaceToLightDirection, mat3(u_projector.transform) * vec3(0, 0, 1));\r\n    float inLight = smoothstep(cos(u_projector.angle / 2.), cos(0.), directionAngel);\r\n    float light = inLight * max(0.0, dot(normal, surfaceToLightDirection)) * 10. / (l * l);\r\n    float specular = inLight * pow(max(0.0, dot(normal, halfVector)), mat.specular);\r\n\r\n    vec3 diffuseColor = float(!mat.hasTexture) * mat.diffuseColor.rgb + float(mat.hasTexture) * texture(textureSampler, v_texcoord).rgb;\r\n    vec3 color = inShadow * (diffuseColor * light + mat.specularColor.rgb * specular);\r\n    FragColor = vec4(color, mat.diffuseColor.a);\r\n}","#version 300 es\r\nprecision mediump float;\r\n\r\nlayout(location = 0) in vec4 a_position;\r\n\r\nuniform mat4 u_transform;\r\nuniform mat4 u_projection;\r\n\r\nvoid main() {\r\n    vec4 position = u_transform * a_position;\r\n    gl_Position = u_projection * position;\r\n}","#version 300 es\r\nprecision mediump float;\r\n\r\nvoid main() {\r\n}","#version 300 es\r\nprecision mediump float;\r\n\r\nlayout(location = 0) in vec4 a_position;\r\nuniform mat4 u_transform;\r\nuniform mat4 u_projection;\r\nuniform float u_size;\r\n\r\nvoid main() {\r\n    gl_Position = u_projection * u_transform * vec4(a_position);\r\n    gl_PointSize = u_size;\r\n}","import { createTexture } from \"./webgl\";\n\nexport class Mesh {\n    public vertexes: Float32Array\n    public indices: Uint16Array\n    public vao: WebGLVertexArrayObject\n    constructor(\n        gl: WebGL2RenderingContext,\n        vertexes: [number, number, number][] | Float32Array,\n        triangles: [number, number, number][] | Uint16Array,\n        normals?: number[],\n        readonly texture?: WebGLTexture,\n        textureCoords?: [number, number][]\n    ) {\n        if (vertexes instanceof Float32Array) {\n            this.vertexes = vertexes;\n        } else {\n            this.vertexes = new Float32Array(vertexes.length * 4).fill(1);\n            for (let i = 0; i < vertexes.length; i++)\n                for (let axis = 0; axis < 3; axis++)\n                    this.vertexes[i * 4 + axis] = vertexes[i][axis];\n        }\n        if (triangles instanceof Uint16Array) {\n            this.indices = triangles;\n        } else {\n            this.indices = new Uint16Array(triangles.flatMap(x => x));\n        }\n        this.vao = gl.createVertexArray()!;\n\n        gl.bindVertexArray(this.vao);\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, this.vertexes, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(0);\n        gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.STATIC_DRAW);\n\n        if (normals) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\n            gl.enableVertexAttribArray(1);\n            gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 0, 0);\n        }\n        if (textureCoords) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoords.flat()), gl.STATIC_DRAW);\n            gl.enableVertexAttribArray(2);\n            gl.vertexAttribPointer(2, 2, gl.FLOAT, false, 0, 0);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindVertexArray(null);\n    }\n    static Cube(gl: WebGL2RenderingContext, a: number = 1): Mesh {\n        const h = a / 2;\n        const vertexes = [\n            [1, 1, -1],\n            [1, 1, 1],\n            [1, -1, 1],\n            [1, -1, -1],\n\n            [-1, 1, 1],\n            [-1, 1, -1],\n            [-1, -1, -1],\n            [-1, -1, 1],\n\n            [-1, 1, 1],\n            [1, 1, 1],\n            [1, 1, -1],\n            [-1, 1, -1],\n\n            [-1, -1, -1],\n            [1, -1, -1],\n            [1, -1, 1],\n            [-1, -1, 1],\n\n            [1, 1, 1],\n            [-1, 1, 1],\n            [-1, -1, 1],\n            [1, -1, 1],\n\n            [-1, 1, -1],\n            [1, 1, -1],\n            [1, -1, -1],\n            [-1, -1, -1],\n        ].map(coords => coords.map(c => c * h) as [number, number, number]);\n        const normals = [\n            [1, 0, 0],\n            [1, 0, 0],\n            [1, 0, 0],\n            [1, 0, 0],\n\n            [-1, 0, 0],\n            [-1, 0, 0],\n            [-1, 0, 0],\n            [-1, 0, 0],\n\n            [0, 1, 0],\n            [0, 1, 0],\n            [0, 1, 0],\n            [0, 1, 0],\n\n            [0, -1, 0],\n            [0, -1, 0],\n            [0, -1, 0],\n            [0, -1, 0],\n\n            [0, 0, 1],\n            [0, 0, 1],\n            [0, 0, 1],\n            [0, 0, 1],\n\n            [0, 0, -1],\n            [0, 0, -1],\n            [0, 0, -1],\n            [0, 0, -1],\n        ]\n        const triangles: [number, number, number][] = [\n            [0, 1, 2],\n            [0, 2, 3],\n            [4, 5, 6],\n            [4, 6, 7],\n            [8, 9, 10],\n            [8, 10, 11],\n            [12, 13, 14],\n            [12, 14, 15],\n            [16, 17, 18],\n            [16, 18, 19],\n            [20, 21, 22],\n            [20, 22, 23],\n        ]\n        return new Mesh(gl, vertexes, triangles, normals.flat())\n    }\n    static Camera(gl: WebGL2RenderingContext, scale: number = 1): Mesh {\n        const positions = [\n            -1, -1, 1,  // cube vertices\n            1, -1, 1,\n            -1, 1, 1,\n            1, 1, 1,\n            -1, -1, 3,\n            1, -1, 3,\n            -1, 1, 3,\n            1, 1, 3,\n            0, 0, 1,  // cone tip\n        ];\n        const indices = [\n            0, 1, 1, 3, 3, 2, 2, 0, // cube indices\n            4, 5, 5, 7, 7, 6, 6, 4,\n            0, 4, 1, 5, 3, 7, 2, 6,\n        ];\n        // add cone segments\n        const numSegments = 6;\n        const coneBaseIndex = positions.length / 3;\n        const coneTipIndex = coneBaseIndex - 1;\n        for (let i = 0; i < numSegments; ++i) {\n            const u = i / numSegments;\n            const angle = u * Math.PI * 2;\n            const x = Math.cos(angle);\n            const y = Math.sin(angle);\n            positions.push(x, y, 0);\n            // line from tip to edge\n            indices.push(coneTipIndex, coneBaseIndex + i);\n            // line from point on edge to next point on edge\n            indices.push(coneBaseIndex + i, coneBaseIndex + (i + 1) % numSegments);\n        }\n        positions.forEach((v, ndx) => {\n            positions[ndx] *= scale;\n        });\n        const vertexes4D = new Float32Array(positions.length / 3 * 4).fill(1);\n        for (let i = 0; i < positions.length / 3; i++) {\n            vertexes4D[i * 4 + 0] = positions[i * 3 + 0];\n            vertexes4D[i * 4 + 1] = positions[i * 3 + 1];\n            vertexes4D[i * 4 + 2] = positions[i * 3 + 2];\n        }\n        return new Mesh(gl, vertexes4D, new Uint16Array(indices));\n    }\n    static DebugCube(gl: WebGL2RenderingContext, scale: number = 1): Mesh {\n        const positions = [\n            -1, -1, -1,  // cube vertices\n            1, -1, -1,\n            -1, 1, -1,\n            1, 1, -1,\n            -1, -1, 1,\n            1, -1, 1,\n            -1, 1, 1,\n            1, 1, 1,\n        ];\n        const indices = [\n            0, 1, 1, 3, 3, 2, 2, 0, // cube indices\n            4, 5, 5, 7, 7, 6, 6, 4,\n            0, 4, 1, 5, 3, 7, 2, 6,\n        ];\n        positions.forEach((v, ndx) => {\n            positions[ndx] *= scale;\n        });\n        const vertexes4D = new Float32Array(positions.length / 3 * 4).fill(1);\n        for (let i = 0; i < positions.length / 3; i++) {\n            vertexes4D[i * 4 + 0] = positions[i * 3 + 0];\n            vertexes4D[i * 4 + 1] = positions[i * 3 + 1];\n            vertexes4D[i * 4 + 2] = positions[i * 3 + 2];\n        }\n        return new Mesh(gl, vertexes4D, new Uint16Array(indices));\n    }\n    static fromObj(gl: WebGL2RenderingContext, obj: string, texture: HTMLImageElement): Mesh {\n        const lines = obj.split(/\\r\\n/g);\n        type Point = [number, number, number];\n        type TPoint = [number, number];\n        const v = new Array<Point>();\n        const vn = new Array<Point>();\n        const vt = new Array<TPoint>();\n\n        const vertexes = new Array<Point>();\n        const normals = new Array<Point>();\n        const texCoords = new Array<TPoint>();\n        const uniqueVertexes = new Map<string, number>();\n        function getVertexIndex(tuple: string): number {\n            const cachedValue = uniqueVertexes.get(tuple);\n            if (cachedValue !== undefined)\n                return cachedValue;\n            const [vi, vti, vni] = tuple.split('/');\n            vertexes.push(v[+vi - 1]);\n            normals.push(vn[+vni - 1]);\n            texCoords.push(vt[+vti - 1]);\n            const index = uniqueVertexes.size;\n            uniqueVertexes.set(tuple, index);\n            return index;\n        }\n        const triangles = new Array<Point>();\n        for (const line of lines) {\n            if (line === '') continue;\n\n            const [cmd, ...params] = line.trim().split(/ +/g);\n            if (cmd.startsWith('v')) {\n                const [x, y, z] = params;\n                switch (cmd) {\n                    case 'v':\n                        v.push([+x, +y, +z]);\n                        break;\n                    case 'vn':\n                        vn.push([+x, +y, +z]);\n                        break;\n                    case 'vt':\n                        vt.push([+x, 1 - +y]);\n                        break;\n                }\n            } else if (cmd === 'f') {\n                for (let i = 0; i < params.length - 2; i++) {\n                    triangles.push([\n                        getVertexIndex(params[0]),\n                        getVertexIndex(params[1 + i]),\n                        getVertexIndex(params[2 + i]),\n                    ]);\n                }\n            }\n        }\n        return new Mesh(gl, vertexes, triangles, normals.flat(), createTexture(gl, texture)!, texCoords);\n    }\n}\n","import { Matrix } from \"./geometry\";\nimport { Projector } from \"./main\";\nimport { TransformMatrixes, TransformLookAt, Transform } from \"./transform\";\nimport { loadSettingsFromURL } from \"./utils\";\n\nexport enum Layers {\n    Main = 1,\n    DebugStroke = 2,\n    DebugFill = 4,\n    Debug = DebugStroke | DebugFill,\n    All = 255,\n    Special = 256,\n}\n\nexport function setupViewports(width: number, height: number, camera: TransformMatrixes, projector: Projector) {\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n    const aspect = halfWidth / halfHeight;\n    const ortoWidth = 10\n    const ortographic = Matrix.Ortographic(-ortoWidth, ortoWidth, -ortoWidth / aspect, ortoWidth / aspect, 100, -100);\n    const cameraUpDown = new TransformLookAt(new TransformMatrixes(Matrix.Move(0, 0, 0)), [0, 10, 0], [0, 0, -1])\n\n    const viewportsPresets: Record<'debug' | 'half' | 'full', {\n        viewport: [number, number, number, number],\n        projection: Matrix,\n        camera: Transform,\n        layers: Layers,\n    }[]> = {\n        debug: [\n            {\n                viewport: [0, halfHeight, halfWidth, halfHeight],\n                projection: ortographic,\n                camera: cameraUpDown,\n                layers: Layers.Special,\n            }, {\n                viewport: [halfWidth, 0, halfWidth, halfHeight],\n                projection: Matrix.Perspective(Math.PI / 4, halfWidth / halfHeight, 0.1, 150),\n                camera: camera,\n                layers: Layers.Main,\n            }, {\n                viewport: [halfWidth, halfHeight, halfWidth, halfHeight],\n                projection: Matrix.Perspective(Math.PI / 4, halfWidth / halfHeight, 0.1, 150),\n                camera: camera,\n                layers: Layers.Main | Layers.DebugStroke,\n            }, {\n                viewport: [0, 0, halfWidth, halfHeight],\n                projection: projector.projection,\n                camera: projector.transform,\n                layers: Layers.Main,\n            },\n\n        ],\n        half: [\n            {\n                viewport: [halfWidth, 0, halfWidth, 2 * halfHeight],\n                projection: Matrix.Perspective(Math.PI / 4, halfWidth / height, 0.1, 150),\n                camera: camera,\n                layers: Layers.Main,\n            },\n            {\n                viewport: [0, 0, halfWidth, 2 * halfHeight],\n                projection: Matrix.Perspective(Math.PI / 4, halfWidth / height, 0.1, 150),\n                camera: camera,\n                layers: Layers.Debug,\n            },\n        ],\n        full: [\n            {\n                viewport: [0, 0, width, height],\n                projection: Matrix.Perspective(Math.PI / 4, width / height, 0.1, 150),\n                camera: camera,\n                layers: Layers.Main,\n            },\n        ],\n    }\n    let viewports = { active: viewportsPresets.full, presets: viewportsPresets };\n    {\n        const viewportsMapping = [undefined, viewportsPresets.full, viewportsPresets.half, viewportsPresets.debug];\n        const layersMapping = [undefined, Layers.Main, Layers.Debug, Layers.DebugStroke | Layers.Main, Layers.Special]\n        window.addEventListener('keydown', (ev) => {\n            if (!ev.code.startsWith('Digit')) return;\n            const digit = Number(ev.code.substring('Digit'.length));\n            if (ev.shiftKey) viewports.active[0].layers = layersMapping[digit] || viewports.active[0].layers\n            else viewports.active = viewportsMapping[digit] || viewports.active\n        })\n        const { viewport } = loadSettingsFromURL({ viewport: 1 });\n        viewports.active = viewportsMapping[viewport] || viewports.active;\n    }\n    return viewports;\n}","import { downloadResources, loadSettingsFromURL, mapRecord } from \"./utils\"\r\nimport { Matrix, Vector } from \"./geometry\"\r\nimport { DecoreManager, Model, ModelsFactory } from \"./model\"\r\nimport * as Drawers from \"./shaders/drawers\"\r\nimport { Keyboard } from \"./input\"\r\nimport { Mesh } from \"./mesh\"\r\nimport { TransformLookAt, TransformMatrixes, TransformProjectorTail, Transform } from \"./transform\"\r\nimport { Layers, setupViewports } from \"./viewports\"\r\n\r\ntype UnwrapMakerFunctions<T> = {\r\n    [K in keyof T]: T[K] extends (...args: any) => any ? ReturnType<T[K]> : unknown\r\n}\r\n\r\nexport class Projector {\r\n    public projection = Matrix.Perspective(this.angle, 1, 0.1, this.maxDistance)\r\n    constructor(\r\n        public transform: TransformLookAt,\r\n        public angle: number,\r\n        public maxDistance: number,\r\n    ) { }\r\n}\r\n\r\ndownloadResources({ skull: './skull.jpg' }, { skull: './skull.obj' }).then(({ images, files }) => {\r\n    const canvas = document.querySelector(\"canvas\")!\r\n    canvas.width = canvas.clientWidth\r\n    canvas.height = canvas.clientHeight\r\n    document.body.appendChild(canvas)\r\n    const gl = canvas.getContext(\"webgl2\")!\r\n    // gl.enable(gl.BLEND);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\r\n    const drawer = mapRecord(Drawers, maker => {\r\n        try {\r\n            return maker(gl);\r\n        } catch (err: any) {\r\n            throw new Error(`Failed init Drawer.${maker.name}: ${err}`);\r\n        }\r\n    }) as UnwrapMakerFunctions<typeof Drawers>;\r\n\r\n    const drawWithShadow: { layers: Layers; draw: (projection: Matrix, camera: Matrix, mesh: Mesh, models: Model[]) => void } = {\r\n        layers: Layers.Main,\r\n        draw: (projection, camera, mesh, models) => drawer.lightingProjector(projection, mesh, models, projector, camera.position(), 10),\r\n    }\r\n    const debugDrawStroke: { layers: Layers; draw: (projection: Matrix, camera: Matrix, mesh: Mesh, models: Model[]) => void } = {\r\n        layers: Layers.DebugStroke,\r\n        draw: (projection, camera, mesh, models) => drawer.simple(projection, mesh, models, false, true),\r\n    }\r\n    const debugDrawFill: { layers: Layers; draw: (projection: Matrix, camera: Matrix, mesh: Mesh, models: Model[]) => void } = {\r\n        layers: Layers.DebugFill,\r\n        draw: (projection, camera, mesh, models) => drawer.normalDebug(projection, mesh, models),\r\n    }\r\n\r\n    const models = new ModelsFactory({\r\n        cube: Mesh.Cube(gl),\r\n        debugCube: Mesh.DebugCube(gl),\r\n        camera: Mesh.Camera(gl),\r\n        skull: Mesh.fromObj(gl, files.skull, images.skull),\r\n    },\r\n        {\r\n            cube: [drawWithShadow, debugDrawStroke, debugDrawFill],\r\n            skull: [drawWithShadow, debugDrawStroke, debugDrawFill],\r\n            camera: [{ layers: Layers.Debug, draw: (projection, camera, mesh, models) => drawer.simple(projection, mesh, models, false, true) }],\r\n            debugCube: [{ layers: Layers.Debug, draw: (projection, camera, mesh, models) => drawer.simple(projection, mesh, models, false, true) }],\r\n        }\r\n    );\r\n    const decore = new DecoreManager<Layers>({\r\n        sprite: [{\r\n            layers: Layers.All,\r\n            draw: (p, c, sprite) => drawer.sprite(p, sprite.transform.matrix.position(), sprite.color, sprite.size)\r\n        }]\r\n    })\r\n    models.add('cube', {\r\n        diffuseColor: [0.8, 0.8, 0.8],\r\n        specularColor: [1, 1, 1],\r\n        specular: 100,\r\n    }, { scale: 10, x: 2, y: -7 });\r\n    models.add('cube', {\r\n        diffuseColor: [0, 1, 0],\r\n        specularColor: [1, 1, 1],\r\n        specular: 100,\r\n    }, { scale: 1, x: 1, y: -0.5 });\r\n    const lightTarget = models.add('cube', {\r\n        diffuseColor: [0, 0, 1],\r\n        specularColor: [1, 1, 1],\r\n        specular: 100,\r\n    }, { scale: 1, x: 5, y: 0.5 });\r\n    models.add('cube', {\r\n        diffuseColor: [1, 0, 0],\r\n        specularColor: [1, 1, 1],\r\n        specular: 100,\r\n    }, { scale: 1, x: 3, y: 0.5 });\r\n    models.add('cube', {\r\n        diffuseColor: [0.8, 0.8, 0.8],\r\n        specularColor: [1, 1, 0],\r\n        specular: 100,\r\n    }, { scale: 20, x: 17.5, y: 0.5 });\r\n    const camera = new TransformMatrixes(Matrix.Move(-4.5, 0.5, -4), Matrix.RotateY(5 * Math.PI / 4));\r\n    models.add('skull',\r\n        {\r\n            diffuseColor: [1, 0.5, 0.5],\r\n            specularColor: [0.5, 1, 1],\r\n            specular: 1000,\r\n            debugColor: [0, 0, 1],\r\n            useTexture: true\r\n        },\r\n        {\r\n            scale: 0.05, x: 3, y: -1, z: -2,\r\n            angleX: -Math.PI / 2,\r\n            angleZ: -Math.PI / 2,\r\n        }\r\n    );\r\n    models.add('skull',\r\n        {\r\n            diffuseColor: [1, 0.2, 0.0],\r\n            specularColor: [0.5, 1, 1],\r\n            specular: 1000,\r\n            debugColor: [0, 0, 1],\r\n            useTexture: false\r\n        },\r\n        {\r\n            scale: 0.01,\r\n            angleX: -Math.PI / 2,\r\n            angleZ: Math.PI,\r\n            parent: new TransformLookAt(camera, [3, 1, 0], [0, 1, 0])\r\n        }\r\n    );\r\n    const projector = new Projector(new TransformLookAt(lightTarget.transform, [0, 0, 0]), Math.PI / 2, 100000)\r\n    models.add('skull',\r\n        {\r\n            diffuseColor: [1, 0.5, 0.5],\r\n            specularColor: [0.5, 1, 1],\r\n            specular: 1000,\r\n            debugColor: [0, 0, 1],\r\n            useTexture: true\r\n        },\r\n        {\r\n            scale: 0.02, x: 0, y: 0, z: 0,\r\n            angleX: -Math.PI / 2,\r\n            angleZ: Math.PI,\r\n            parent: new TransformLookAt(projector.transform, [1, 0, 0], [0, 1, 0])\r\n        }\r\n    );\r\n    decore.addSprite(16, [0.5, 0.5, 0], { parent: projector.transform })\r\n    decore.addCustom(Layers.Special, () => drawer.texture(10));\r\n    const projectionPerspective = Matrix.Perspective(Math.PI / 4, canvas.width/canvas.height, 0.1, 150);\r\n    makeCameraModels(models, camera, projectionPerspective)\r\n    models.add('debugCube', { diffuseColor: [0, 0, 0], debugColor: [1, 1, 0], specular: 0, specularColor: [0, 0, 0] },\r\n        {\r\n            parent: new TransformProjectorTail(projector.transform, projector.projection),\r\n        });\r\n\r\n    const viewports = setupViewports(canvas.width, canvas.height, camera, projector);\r\n    let lastTick = 0\r\n    let frameId = -1;\r\n    let time = 0;\r\n    const keyboard = new DemoKeyboard();\r\n    const shadowsT = initShadowMap(gl, models, [\"cube\", \"skull\"]);\r\n    const draw = (currentTick: number) => {\r\n        const dt = (currentTick - lastTick) / 1000\r\n        time += dt;\r\n        lastTick = currentTick\r\n        const rotationCenter = [1, -0.5, 0] as [number, number, number];\r\n        rotationCenter[0] += 3 * Math.cos(time / 2);\r\n        rotationCenter[1] += 0.5 * Math.cos(time / 2);\r\n        rotationCenter[2] += 3 * Math.sin(time / 2);\r\n        projector.transform.pos = rotationCenter;\r\n        if (keyboard.totalPressed > 0) {\r\n            let [dx, dy, dz] = keyboard.moveDirection(dt);\r\n            const speed = keyboard.keys.speed ? 4 : 1;\r\n            [dx, dy, dz] = camera.rotate.multiplyVector([dx, dy, dz, 1]);\r\n            camera.shift.multiply(Matrix.Move(dx * speed, dy * speed, dz * speed));\r\n            const [rx, ry, rz] = keyboard.rotateDirection(dt)\r\n            camera.rotate.multiply(Matrix.RotateX(rx).multiply(Matrix.RotateY(ry)))\r\n        }\r\n\r\n        shadowsT.updator(projector);\r\n        gl.activeTexture(gl.TEXTURE10);\r\n        gl.bindTexture(gl.TEXTURE_2D, shadowsT.texture);\r\n        gl.clearColor(0.1, 0.1, 0.1, 1.0)\r\n        gl.clearDepth(1.0)\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n        viewports.active.forEach(viewport => {\r\n            gl.viewport(...viewport.viewport);\r\n            const cameraMatrix = viewport.camera.matrix;\r\n            const projection = Matrix.Multiply(viewport.projection, cameraMatrix.inverse());\r\n            models.draw(projection, cameraMatrix, viewport.layers);\r\n            decore.draw(projection, cameraMatrix, viewport.layers);\r\n        })\r\n        gl.activeTexture(gl.TEXTURE10);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        frameId = requestAnimationFrame(draw)\r\n    }\r\n    frameId = requestAnimationFrame(draw)\r\n})\r\n\r\nfunction initShadowMap<M extends string>(gl: WebGL2RenderingContext, models: ModelsFactory<M, Layers>, shadowKeys: M[]) {\r\n    const depthTexture = gl.createTexture();\r\n    const depthTextureSize = 1024;\r\n    const shader = Drawers.shadowMap(gl);\r\n    gl.bindTexture(gl.TEXTURE_2D, depthTexture);\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,      // target\r\n        0,                  // mip level\r\n        gl.DEPTH_COMPONENT32F, // internal format\r\n        depthTextureSize,   // width\r\n        depthTextureSize,   // height\r\n        0,                  // border\r\n        gl.DEPTH_COMPONENT, // format\r\n        gl.FLOAT,           // type\r\n        null);              // data\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n    const depthFramebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, depthFramebuffer);\r\n    gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,       // target\r\n        gl.DEPTH_ATTACHMENT,  // attachment point\r\n        gl.TEXTURE_2D,        // texture target\r\n        depthTexture,         // texture\r\n        0);                   // mip level\r\n\r\n    return {\r\n        texture: depthTexture,\r\n        updator: (projector: Projector) => {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, depthFramebuffer);\r\n            gl.viewport(0, 0, depthTextureSize, depthTextureSize);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            const p = Matrix.Multiply(projector.projection, projector.transform.matrix.inverse())\r\n            shadowKeys.forEach(type => {\r\n                shader(p, models.meshes[type], models.models[type]);\r\n            })\r\n            // now draw scene to the canvas projecting the depth texture into the scene\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n    }\r\n}\r\n\r\nclass DemoKeyboard extends Keyboard<\"forward\"|\"backward\"|\"left\"|\"right\"|\"up\"|\"down\"|\"turnDown\"|\"turnUp\"|\"turnRight\"|\"turnLeft\"|\"speed\"> {\r\n    constructor() {\r\n        super({\r\n            \"KeyW\": \"forward\",\r\n            \"KeyS\": \"backward\",\r\n            \"KeyA\": \"left\",\r\n            \"KeyD\": \"right\",\r\n            \"Space\": \"up\",\r\n            \"KeyV\": \"down\",\r\n            \"KeyF\": \"turnDown\",\r\n            \"KeyR\": \"turnUp\",\r\n            \"KeyQ\": \"turnRight\",\r\n            \"KeyE\": \"turnLeft\",\r\n            \"ShiftLeft\": \"speed\",\r\n        })\r\n    }\r\n    moveDirection(length: number) {\r\n        const { left, right, up, down, forward, backward } = this.keys;\r\n        return Vector.Normilize([+right - +left, +up - +down, +backward - +forward], length)\r\n    }\r\n    rotateDirection(length: number) {\r\n        const { turnDown, turnLeft, turnRight, turnUp } = this.keys;\r\n        return Vector.Normilize([+turnUp - +turnDown, +turnRight - +turnLeft, 0], length)\r\n    }\r\n}\r\nfunction makeCameraModels(models: ModelsFactory<\"cube\" | \"debugCube\" | \"camera\" | \"skull\", Layers>, camera: TransformMatrixes, projectionPerspective: Matrix) {\r\n    models.add('camera', { diffuseColor: [0, 0, 0], debugColor: [1, 1, 1], specular: 0, specularColor: [0, 0, 0] }, {\r\n        scale: 0.1, parent: camera\r\n    })\r\n    models.add('debugCube', { diffuseColor: [0, 0, 0], debugColor: [1, 1, 1], specular: 0, specularColor: [0, 0, 0] },\r\n        {\r\n            parent: new TransformProjectorTail(camera, projectionPerspective),\r\n        })\r\n}\r\n","interface EventsSource {\r\n    addEventListener(event: 'keyup' | 'keydown', listener: (ev: KeyboardEvent) => void): void\r\n}\r\n\r\nexport class Keyboard<T extends string> {\r\n    totalPressed = 0\r\n    keys: Record<T, boolean>\r\n    constructor(mapping: Record<string, T>, parent: EventsSource = window) {\r\n        const keys = Object.values(mapping);\r\n        this.keys = Object.fromEntries(keys.map(key => ([key, false]))) as Record<T, boolean>;\r\n        parent.addEventListener('keydown', (ev) => {\r\n            const action = mapping[ev.code];\r\n            if (action) {\r\n                ev.preventDefault();\r\n                if (!this.keys[action]) {\r\n                    this.keys[action] = true;\r\n                    ++this.totalPressed;\r\n                }\r\n            }\r\n        })\r\n        parent.addEventListener('keyup', (ev) => {\r\n            const action = mapping[ev.code];\r\n            if (action) {\r\n                ev.preventDefault();\r\n                if (this.keys[action]) {\r\n                    this.keys[action] = false;\r\n                    --this.totalPressed;\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n"],"names":["$df5bef30413a053b$export$a6b5873e928946a9","$d0ac685262e621dd$export$9b781de7bf37bf48","$df5bef30413a053b$export$fe58198efe02b173","url","Promise","resolve","reject","img","Image","crossOrigin","onload","onerror","Error","src","$df5bef30413a053b$export$4de3fd5dc16bcdf0","record","map","Object","fromEntries","entries","key","value","$df5bef30413a053b$export$537fb84b8adc78c7","urlsMap","urls","all","_","then","images","i","$df5bef30413a053b$var$downloadFile","fetch","res","text","$df5bef30413a053b$export$645fa2d1e9407b63","file","$df5bef30413a053b$var$getOrDefault","origin","params","hasKey","has","get","Number","range","min","max","Math","random","sign","signed","Cross","a","b","Substract","Normilize","v","newLenght","eps","l","sqrt","$d0ac685262e621dd$export$5b12bf1653c0dd85","constructor","m","length","this","Float32Array","static","x","y","z","angle","c","cos","s","sin","fieldOfView","aspect","nearZ","farZ","f","tan","PI","rangeInv","minX","maxX","minY","maxY","minZ","maxZ","w","h","d","from","to","up","zAxis","xAxis","yAxis","dx","dy","dz","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","multiply","another","Multiply","multiplyLeft","position","multiplyVector","vector","result","k","i1","pop","inverse","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","$96a4ff133414c1f0$export$241ce997be19d094","t","p","matrix","$96a4ff133414c1f0$export$8015f8367a6f5914","shift","Identity","rotate","scale","parent","$96a4ff133414c1f0$export$13d4111c4143751d","pos","LookAt","$0688557bb19ac86e$export$a1edc412be3e1841","material","transform","$0688557bb19ac86e$export$3075603db8e6204c","color","size","$0688557bb19ac86e$export$13324738a8d0ef9a","meshes","drawers","models","Array","types","keys","add","type","angleX","angleY","angleZ","model","Move","RotateX","RotateY","RotateZ","Scale","push","draw","projection","camera","layer","forEach","filter","layers","$0688557bb19ac86e$export$62986b7f4fbd40c","sprites","custom","addSprite","sprite","addCustom","drawer","$1659abb3fbe87a4d$export$c91f934295d2a855","gl","vertex","fragment","uniforms","attributes","program","vsSource","fsSource","vertexShader","$1659abb3fbe87a4d$var$loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","$1659abb3fbe87a4d$var$initShaderProgram","name","uniform","getUniformLocation","$1659abb3fbe87a4d$var$getUniforms","attr","getAttribLocation","$1659abb3fbe87a4d$var$getAttributes","numUniforms","ACTIVE_UNIFORMS","uniformsNames","Set","values","getActiveUniform","console","warn","numAttributes","ACTIVE_ATTRIBUTES","attributesNames","getActiveAttrib","err","$1659abb3fbe87a4d$export$37b981a8c575f415","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","$f8d1baad96850313$exports","$691cd3bd89631624$export$52257e56c24a8923","$parcel$interopDefault","mesh","fill","stroke","useProgram","bindVertexArray","vao","diffuseColor","r","g","debugColor","dr","dg","db","uniformMatrix4fv","uniform4f","drawElements","TRIANGLES","indices","UNSIGNED_SHORT","LINES","$691cd3bd89631624$export$2c247a158e9a33db","$691cd3bd89631624$export$68789d9a44704ddc","view","specularColor","specular","enableTexture","projectorTransform","projectorAngle","projectorProjection","shadowMap","sampler","createSampler","samplerParameteri","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","LINEAR","projector","viewPos","$691cd3bd89631624$export$7aff6e7ba39bb774","bindSampler","uniform1f","uniform3f","uniform1i","activeTexture","TEXTURE1","useTexture","$691cd3bd89631624$export$9f64abe9148df1d","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","enableVertexAttribArray","drawArrays","POINTS","$691cd3bd89631624$export$ab69073b3903a075","programInfo","createVertexArray","$abaa2a99d7a691e9$export$e176487c05830cc5","vertexes","triangles","normals","textureCoords","axis","Uint16Array","flatMap","ELEMENT_ARRAY_BUFFER","flat","coords","positions","coneBaseIndex","coneTipIndex","ndx","vertexes4D","obj","lines","split","vn","vt","texCoords","uniqueVertexes","Map","getVertexIndex","tuple","cachedValue","undefined","vi","vti","vni","index","set","line","cmd","trim","startsWith","$96b99c48a8218eac$export$89312ce47c0ca777","$96b99c48a8218eac$export$cac1a24cf56d842","width","height","halfWidth","halfHeight","viewportsPresets","debug","viewport","Ortographic","Special","Perspective","Main","DebugStroke","half","Debug","full","viewports","active","presets","viewportsMapping","layersMapping","window","addEventListener","ev","code","digit","substring","shiftKey","defaults","URL","location","href","defaultValue","searchParams","$df5bef30413a053b$export$98f8ce544598e7a7","$ad2bcec7a0192558$export$c1e1cb5f4fbcd06d","maxDistance","images1","files1","skull","files","canvas","document","querySelector","clientWidth","clientHeight","body","appendChild","getContext","enable","DEPTH_TEST","CULL_FACE","blendFunc","SRC_ALPHA","ONE","$691cd3bd89631624$exports","maker","drawWithShadow","lightingProjector","debugDrawStroke","simple","debugDrawFill","DebugFill","normalDebug","models1","cube","Cube","debugCube","DebugCube","Camera","fromObj","decore","All","lightTarget","camera1","projectionPerspective","$ad2bcec7a0192558$var$makeCameraModels","lastTick","frameId","time","keyboard","$ad2bcec7a0192558$var$DemoKeyboard","shadowsT","shadowKeys","depthTexture","depthTextureSize","DEPTH_COMPONENT32F","DEPTH_COMPONENT","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","depthFramebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","DEPTH_ATTACHMENT","updator","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","$ad2bcec7a0192558$var$initShadowMap","currentTick","dt","rotationCenter","totalPressed","moveDirection","speed","rx","ry","rz","rotateDirection","TEXTURE10","clearColor","clearDepth","cameraMatrix","requestAnimationFrame","mapping","action","preventDefault","super","KeyW","KeyS","KeyA","KeyD","Space","KeyV","KeyF","KeyR","KeyQ","KeyE","ShiftLeft","left","right","down","forward","backward","turnDown","turnLeft","turnRight","turnUp"],"version":3,"file":"index.2721e9cd.js.map"}